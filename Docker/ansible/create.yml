---
- name:
    Create a Rackspace cloud server, wait for SSH and save
    instance metadata like server IP and ID for further consumption.
  hosts: localhost
  connection: local
  vars:
    debug_workflow: false
    pip_pyrax: false
  tasks:
    - name: "Include debugging"
      include_tasks: debug.yml
      when:
        - debug_workflow is defined
        - debug_workflow

    - name: Install Rackspace module dependencies
      pip:
        name: pyrax
        extra_args: --user --no-cache-dir
      when:
        - pip_pyrax is defined
        - pip_pyrax

    - name: Add SSH key to Rackspace account
      local_action:
        module: rax_keypair
        api_key: "{{ lookup('env', 'RACKSPACE_API_TOKEN') }}"
        username: "{{ lookup('env', 'RACKSPACE_USERNAME') }}"
        region: "{{ lookup('env', 'RACKSPACE_REGION') }}"
        name: "Cody - Image Factory Test Key"
        public_key: "{{ lookup('env', 'RACKSPACE_SSH_PUB_KEY') }}"

    - name: "Create server"
      local_action:
        module: rax
        image: "{{ lookup('env', 'RACKSPACE_IMAGE') }}"
        api_key: "{{ lookup('env', 'RACKSPACE_API_TOKEN') }}"
        username: "{{ lookup('env', 'RACKSPACE_USERNAME') }}"
        region: "{{ lookup('env', 'RACKSPACE_REGION') }}"
        tenant_id: "{{ lookup('env', 'RACKSPACE_TENANT_ID') }}"
        flavor: "{{ lookup('env', 'RACKSPACE_FLAVOR') }}"
        wait: yes
        name:  "Cody-test-{{ lookup('env', 'CIRCLE_SHA1')|truncate(8,True,'') }}{{ '%Y%m%d%H%M%S'|strftime }}"
        state: present
        wait_timeout: 600
        key_name: "Cody - Image Factory Test Key"
      register: rackspace
      retries: 5
      delay: 10
      until: rackspace is succeeded

    - name: Print rackspace variable
      debug:
        msg: "{{ rackspace }}"

    - name: Create inventory file with Rackspace server device details
      blockinfile:
        create: yes
        path: "{{ lookup('env', 'GITHUB_WORKSPACE') }}/inventory"
        block: |
          all:
            hosts:
              metal:
                ansible_host: {{ rackspace.instances[0].rax_accessipv4 }}
                ansible_port: 22
                ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
                rackspace_device_id: {{ rackspace.instances[0].id }}

    - name: Create HOSTALIASES .hosts file, - a dynamic alternative of /etc/hosts
      blockinfile:
        create: yes
        path: "{{ lookup('env', 'GITHUB_WORKSPACE') }}/.hosts"
        block: |
          # see https://unix.stackexchange.com/a/226318/217844
          metal {{ rackspace.instances[0].rax_accessipv4 }}.xip.io

    - name: Wait for SSH
      wait_for:
        delay: 120
        host: "{{ rackspace.instances[0].rax_accessipv4 }}"
        port: 22
        state: started
        timeout: 600
